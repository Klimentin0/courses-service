# Build the go binary
FROM golang:1.23.4 AS build_courses-api
ENV CGO_ENABLED=0
ARG BUILD_REF

COPY . /courses-service

# Create the service directory and the copy the module files first and then
# download the dependencies. If this doesn't change, we won't need to do this
# again in future builds.
# instead of copy we can use(for security concerns):
# RUN mkdir /service
# COPY go.* /service/
# WORKDIR /service
# RUN go mod download

# Build the admin binary
WORKDIR /courses-service/app/tooling/courses-admin
RUN go build -ldflags "-X main.build=${BUILD_REF}"

# Build the service binary
WORKDIR /courses-service/app/services/courses-api
RUN go build -ldflags "-X main.build=${BUILD_REF}"

FROM alpine:3.21
ARG BUILD_DATE
ARG BUILD_REF
RUN addgroup -g 1000 -S courses && \
    adduser -u 1000 -h /service -G courses -S courses
COPY --from=build_courses-api --chown=courses:courses /courses-service/config/keys/. /service/config/keys/.
COPY --from=build_courses-api --chown=courses:courses /courses-service/app/tooling/courses-admin/courses-admin /service/courses-admin
COPY --from=build_courses-api --chown=courses:courses /courses-service/app/services/courses-api/courses-api /service/courses-api
WORKDIR /service
USER courses
CMD ["./courses-api"]

LABEL org.opencontainers.image.created="${BUILD_DATE}" \
      org.opencontainers.image.title="courses-api" \
      org.opencontainers.image.authors="Klimentii Meshkov <meshkov.biz@yandex.ru>" \
      org.opencontainers.image.source="https://github.com/Klimentin0/courses-service/tree/master/app/services/courses-api" \
      org.opencontainers.image.revision="${BUILD_REF}" \
      org.opencontainers.image.vendor="Klimentii"
